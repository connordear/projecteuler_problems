# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
import math


def main():
    print(len(factorizor(10000000000000000000)))
    # triangleseq = []
    # for i in range(1000, 10000):
    #     triangleseq.append(triangulate(i))
    # for i in range(1, len(triangleseq)):
    #     if len(divisors(triangleseq[i])) == 501:
    #         print(triangleseq[i])
    # print(triangleseq)
    # print(divisors(triangleseq[6]))
    # print(len(divisors(triangleseq[6])))


def triangulate(a):
    triangulized = 0
    for i in range(1, a+1):
        triangulized += i
    return triangulized


def divisors(a):
    divisor = []
    for i in range(1, a+1):
        if a % i == 0:
            divisor.append(i)
    return divisor


def factorizor(a):
    factors = []
    for i in range(1, int(math.sqrt(a)) + 1):
        if a % i == 0:
            factors.append(i)
            factors.append((a/i))
    return factors


main()
